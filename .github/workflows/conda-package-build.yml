name: Building Package using Conda

on:
  workflow_call:
    inputs:
      conda-directory:
        description: 'Directory containing the conda recipe. Default is "conda".'
        default: "conda"
        required: false
        type: string
      python-minor-version:
        description: 'Python minor version on which to build / deploy the package. Default is "[8, 9, 10, 11, 12]" '
        default: "[9, 10, 11, 12]"
        required: false
        type: string
      operating-system:
        description: 'OS on which to build / deploy the package. Default is "[ ubuntu-latest , macos-latest , macos-13 , windows-latest ]" '
        default: '["ubuntu-latest", "macos-latest", "macos-13", "windows-latest"]'
        required: false
        type: string
      numpy-version:
        description: 'Numpy minor version. Default is None.'
        default: 0
        required: false
        type: number
      anaconda-channel:
        description: 'Channel hosting developent labels to publish on'
        default: 'https://conda.anaconda.org/openalea3'
        required: false
      labels:
        description: 'A comma-separated (no space) string of channel labels used for development, release candidates and release builds'
        default: 'dev,rc,main'
        required: false
      build-options:
        description: 'Build options for the package. Default is "--no-test".'
        default: '--no-test'
        required: false
        type: string
      force-build-matrix:
        description: 'Force full input matrix builds whatever the context.'
        default: 'false'
        required: false
      force-skip-promotion:
        description: 'Force skipping promotion.'
        default: 'false'
        required: false
      force-skip-publish:
        description: 'Force skipping publication.'
        default: 'false'
        required: false
    secrets:
      anaconda_token:
        description: 'Anaconda access Token (required)'
        required: true

jobs:
  setup-ci:
    name: Setup CI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Run composite action
        id: set
        uses: openalea/action-build-publish-anaconda/setup-ci@dev
        with:
          conda-directory: ${{ inputs.conda-directory }}
          python-minor-version: ${{ inputs.python-minor-version }}
          operating-system: ${{ inputs.operating-system }}
          force-build-matrix: ${{ inputs.force-build-matrix }}
          anaconda-channel: ${{ inputs.anaconda-channel }}
          labels: ${{ inputs.labels }}
          force-skip-promotion: ${{ inputs.force-skip-promotion }}
          force-skip-publish: ${{ inputs.force-skip-publish }}
  build-and-publish:
    name: ${{ matrix.os }}, Python 3.${{ matrix.python-minor-version }} for conda deployment
    runs-on: ${{ matrix.os }}
    needs: setup-ci
    strategy:
      fail-fast: false
      matrix:
        os: ${{ needs.set.outputs.build_os }}
        python-minor-version: ${{ needs.set.outputs.build_py }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        fetch-tags: true
    - name: Build and Publish
      uses: openalea/action-build-publish-anaconda/build_and_publish@dev
      with:
        conda-directory: ${{ inputs.conda-directory }}
        python: ${{ matrix.python-minor-version }}
        numpy: ${{ inputs.numpy-version }}
        channels: ${{ needs.set.outputs.channels }}
        token: ${{ secrets.anaconda_token }}
        publish: ${{ needs.set.outputs.publish }}
        label: ${{ needs.set.outputs.publish_on }}
        build-options: ${{ inputs.build-options }}
  promote:
    name: Promotion
    runs-on: ubuntu-latest
    needs: [setup-ci, build-and-publish]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Run composite action
        id: promote
        uses: openalea/action-build-publish-anaconda/promote@dev
        with:
          token: ${{ secrets.anaconda_token }}
          promote_from: ${{ needs.setup-ci.set.outputs.promote_from }}
          promote_to: ${{ needs.setup-ci.set.outputs.promote_to }}
